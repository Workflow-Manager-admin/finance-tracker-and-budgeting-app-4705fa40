{"is_source_file": true, "format": "Dart", "description": "Main frontend source file for a Flutter-based personal finance tracker app, defining app initialization, navigation, authentication, dashboard, transactions, budgets, and analytics screens with UI and interaction logic.", "external_files": ["services/auth_service.dart", "services/transaction_service.dart", "services/budget_service.dart", "widgets/finance_widgets.dart", "widgets/pie_chart.dart"], "external_methods": ["AuthService.isAuthenticated", "AuthService.logout", "AuthService.login", "AuthService.register", "TransactionService.fetchTransactions", "TransactionService.createTransaction", "TransactionService.updateTransaction", "TransactionService.deleteTransaction", "BudgetService.fetchBudgets", "BudgetService.fetchAnalytics"], "published": ["main", "FinanceTrackerApp", "AuthNavigation", "MainScaffold", "DashboardScreen", "TransactionsScreen", "TransactionEditScreen", "BudgetsScreen", "ChartsScreen", "LoginScreen", "RegisterScreen"], "classes": [{"name": "FinanceTrackerApp", "description": "Root widget setting up dark theme and the home route with authentication navigation."}, {"name": "AuthNavigation", "description": "Handles authentication check and navigates between login, registration, and main app screens."}, {"name": "MainScaffold", "description": "Main app shell with bottom navigation for dashboard, transactions, budgets, and charts."}, {"name": "DashboardScreen", "description": "Displays recent transactions and a prompt to explore charts."}, {"name": "TransactionsScreen", "description": "Displays list of transactions with options to add, edit, or delete."}, {"name": "TransactionEditScreen", "description": "Form for creating or editing a transaction, including date picker."}, {"name": "BudgetsScreen", "description": "Displays categorized budgets and limits, with refresh capability."}, {"name": "ChartsScreen", "description": "Shows category spending breakdown with pie chart and analytics info."}, {"name": "LoginScreen", "description": "UI to handle user login with email and password."}, {"name": "RegisterScreen", "description": "UI to handle new user registration with email, password, and confirmation."}], "methods": [{"name": "build", "description": "Build method for widgets, defining UI structure and theme."}, {"name": "initState", "description": "Initialization logic for fetching data, handling auth state, or setting up UI."}, {"name": "_fetchRecent", "description": "Fetch recent transactions for dashboard display."}, {"name": "_fetchTransactions", "description": "Retrieve list of transactions for Transactions screen."}, {"name": "_deleteTx", "description": "Delete a transaction after user confirmation."}, {"name": "_pickDate", "description": "Open date picker dialog for selecting transaction date."}, {"name": "_save", "description": "Handle submission of new or edited transaction data."}, {"name": "build", "description": "Builds the UI for each screen, including scaffold, app bar, body, and controls."}], "calls": ["AuthService.isAuthenticated", "AuthService.logout", "AuthService.login", "AuthService.register", "TransactionService.fetchTransactions", "TransactionService.createTransaction", "TransactionService.updateTransaction", "TransactionService.deleteTransaction", "BudgetService.fetchBudgets", "BudgetService.fetchAnalytics", "Navigator.of", "showDialog", "showDatePicker", "setState", "build"], "search-terms": ["flutter", "navigation", "transactions", "budgets", "charts", "auth", "theme", "dark mode", "bottom navigation", "state management", "UI", "screens", "widgets", "fetch", "create", "update", "delete"], "state": 2, "file_id": 6, "knowledge_revision": 133, "git_revision": "d087c3c52cadcb70a045c78afa544c5ab5345680", "revision_history": [{"46": "493d7ab5873d8812d6811315fbb91da2b544384f"}, {"68": "493d7ab5873d8812d6811315fbb91da2b544384f"}, {"70": "493d7ab5873d8812d6811315fbb91da2b544384f"}, {"76": "27489292aa93ea1c371aef134f0d6ed100ad247e"}, {"84": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"86": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"87": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"88": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"89": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"90": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"91": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"93": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"95": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"96": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"97": "bcd6451ee69f6d8a35aba201b721f05133600a91"}, {"98": "432760d90c01bfa0077b677e6cef236be7cf14ba"}, {"99": "432760d90c01bfa0077b677e6cef236be7cf14ba"}, {"100": "432760d90c01bfa0077b677e6cef236be7cf14ba"}, {"101": "432760d90c01bfa0077b677e6cef236be7cf14ba"}, {"102": "432760d90c01bfa0077b677e6cef236be7cf14ba"}, {"103": "75eb6f27dc2dabd8f3af3d526d85e34a01387fc9"}, {"104": "75eb6f27dc2dabd8f3af3d526d85e34a01387fc9"}, {"105": "75eb6f27dc2dabd8f3af3d526d85e34a01387fc9"}, {"106": "75eb6f27dc2dabd8f3af3d526d85e34a01387fc9"}, {"107": "75eb6f27dc2dabd8f3af3d526d85e34a01387fc9"}, {"108": "75eb6f27dc2dabd8f3af3d526d85e34a01387fc9"}, {"109": "f9da1de21cbb4a005b98304067a1467ed4e6692e"}, {"118": "f9da1de21cbb4a005b98304067a1467ed4e6692e"}, {"119": "f9da1de21cbb4a005b98304067a1467ed4e6692e"}, {"120": "f9da1de21cbb4a005b98304067a1467ed4e6692e"}, {"121": "2eb00d0a8b308a1fbc424fe970dbd4dfc9ffadfe"}, {"124": "2eb00d0a8b308a1fbc424fe970dbd4dfc9ffadfe"}, {"125": "2eb00d0a8b308a1fbc424fe970dbd4dfc9ffadfe"}, {"126": "2eb00d0a8b308a1fbc424fe970dbd4dfc9ffadfe"}, {"127": "d087c3c52cadcb70a045c78afa544c5ab5345680"}, {"128": "d087c3c52cadcb70a045c78afa544c5ab5345680"}, {"131": "d087c3c52cadcb70a045c78afa544c5ab5345680"}, {"132": "d087c3c52cadcb70a045c78afa544c5ab5345680"}, {"133": "d087c3c52cadcb70a045c78afa544c5ab5345680"}], "hash": "631504438b70002e445463b8b790f752", "format-version": 4, "code-base-name": "finance_tracker_frontend", "filename": "finance_tracker_frontend/lib/main.dart"}